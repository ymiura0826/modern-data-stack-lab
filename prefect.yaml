# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: modern-data-stack-lab
prefect-version: 3.4.7

# build section allows you to manage and build docker images
build: null

# push section allows you to manage if and how this project is uploaded to remote locations
push: null

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
  - prefect.deployments.steps.git_clone:
      repository: https://github.com/ymiura0826/modern-data-stack-lab.git
      branch: main
  - prefect.deployments.steps.pip_install_requirements:
      requirements_file: requirements.txt

dependencies:
  - prefect==3.4.7
  - prefect-dbt==0.7.1
  - prefect-gcp==0.4.4
  - pydantic<2.0
  - prefect-shell==0.3.1
  - dbt-core==1.10.2
  - dbt-bigquery==1.9.2
  - google-cloud-bigquery==3.34.0
  - google-auth==2.40.3
  - db-dtypes==1.4.3
  - pydata-google-auth==1.9.1

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: test_hello
  version: null
  tags: []
  concurrency_limit: null
  description: null
  entrypoint: hello_flow.py:hello
  parameters: {}
  work_pool:
    name: docker-push-pool
    work_queue_name: null
    job_variables: {}
  schedules: []

# 追加: dbt_flow の Flow 定義
- name: dbt_flow
  version: null
  tags: []
  concurrency_limit: null
  description: null
  entrypoint: flows/dbt_flow.py:run_dbt_flow
  parameters: {}
  work_pool:
    name: docker-push-pool
    work_queue_name: null
    job_variables: {}
  schedules: []

- name: dbt_flow
  version: null
  tags: []
  concurrency_limit: null
  description: null
  entrypoint: flows/test_dbt_exists.py:test_dbt_exists
  parameters: {}
  work_pool:
    name: docker-push-pool
    work_queue_name: null
    job_variables: {}
  schedules: []